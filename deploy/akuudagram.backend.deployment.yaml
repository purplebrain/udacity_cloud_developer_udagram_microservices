apiVersion: apps/v1
kind: Deployment
metadata:
  name: akuudagram-backend
  labels:
    app: akuudagram-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: akuudagram-backend
  template:
    metadata:
      labels:
        app: akuudagram-backend
    spec:
      containers:
      - name: akuudagram-backend-feed
        image: msd4docker/repo_udagram:tag_backend_feed
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"      
        env:
        - name: AWS_REGION
          value: ""
        - name: AWS_MEDIA_BUCKET
          value: ""
        - name: AWS_PROFILE
          value: "root"
        - name: POSTGRES_USERNAME
          value: ""
        - name: POSTGRES_PASSWORD
          value: ""
        - name: POSTGRES_DATABASE
          value: ""
        - name: POSTGRES_HOST
          value: ""
        - name: POSTGRES_DB
          value: ""
        - name: URL
          value: "http://localhost:8100"
        - name: JWT_SECRET
          value: "helloworld"
        volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true
        ports:
        - containerPort: 8081
      - name: akuudagram-backend-users
        image: msd4docker/repo_udagram:tag_backend_users
        imagePullPolicy: Always
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"      
        env:
        - name: AWS_REGION
          value: ""
        - name: AWS_MEDIA_BUCKET
          value: ""
        - name: AWS_PROFILE
          value: "root"
        - name: POSTGRES_USERNAME
          value: ""
        - name: POSTGRES_PASSWORD
          value: ""
        - name: POSTGRES_DATABASE
          value: ""
        - name: POSTGRES_HOST
          value: ""
        - name: POSTGRES_DB
          value: ""
        - name: URL
          value: "http://localhost:8100"
        - name: JWT_SECRET
          value: "helloworld"
        volumeMounts:
          - name: aws-secret
            mountPath: "/root/.aws/"
            readOnly: true
        ports:
        - containerPort: 8082
      restartPolicy: Always
      volumes:
        - name: aws-secret
          secret:
            secretName: aws-secret
